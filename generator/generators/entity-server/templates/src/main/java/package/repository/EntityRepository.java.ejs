package <%=packageName%>.repository;

import com.datastax.oss.driver.api.core.CqlSession;
import <%=packageName%>.config.cassandra.cloudDatastax.CloudSessionManager;
import <%=packageName%>.domain.<%=asEntity(entityClass)%>;
import <%=packageName%>.dao.<%=asEntity(entityClass)%>Dao;
import <%=packageName%>.mapper.<%=asEntity(entityClass)%>DataMapper;
import org.springframework.stereotype.Repository;

import java.util.List;
import java.util.Optional;
import java.util.UUID;

@Repository
public class <%=asEntity(entityClass)%>Repository {
    private final CqlSession session;
    private <%=asEntity(entityClass)%>DataMapper dataMapper;
    private <%=asEntity(entityClass)%>Dao dao;

    public <%=asEntity(entityClass)%>Repository(CloudSessionManager sessionManager) {
        this.session= sessionManager.getSession();
        this.dataMapper = <%=asEntity(entityClass)%>DataMapper.builder(session).build();
        this.dao = this.dataMapper.<%=entityInstance%>Dao();
    }

    public Optional<<%=asEntity(entityClass)%>> findById(UUID id) {
        return Optional.ofNullable(dao.findById(id));
    }

    public void deleteById(UUID id) {
        <%=asEntity(entityClass)%> obj=dao.findById(id);
        dao.delete(obj);
    }

    public <%=asEntity(entityClass)%> save(<%=asEntity(entityClass)%> obj) {
        dao.save(obj);
        return obj;
    }

    public List<<%=asEntity(entityClass)%>> findAll() {
        return dao.all().all();
    }
}
